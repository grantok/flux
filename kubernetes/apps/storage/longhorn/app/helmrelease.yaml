---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app longhorn
  namespace: storage
spec:
  # releaseName: longhorn
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    persistence:
      defaultClass: true
      defaultClassReplicaCount: 3
      reclaimPolicy: Retain
    defaultSettings:
      backupstorePollInterval: 300
      # backupTarget: nfs://${NFS_SERVER}:/volume3/kubernetes/LonghornBackup
      createDefaultDiskLabeledNodes: true
      defaultDataLocality: best-effort
      nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
      concurrentAutomaticEngineUpgradePerNodeLimit: 2
      storageMinimalAvailablePercentage: 5
      storageOverProvisioningPercentage: 100
      defaultReplicaCount: 3
      defaultLonghornStaticStorageClass: longhorn
      ## Sollte ge√§ndert werden
      replicaSoftAntiAffinity: false
      allowVolumeCreationWithDegradedAvailability: false
    ingress:
      enabled: true
      ingressClassName: nginx
      host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
      path: /
      tls:
        - hosts:
            - *host
      tlsSecret: longhorn
      annotations:
        # coredns.io/hostname: "longhorn.${SECRET_DOMAIN}"
        cert-manager.io/cluster-issuer: letsencrypt-production
        hajimari.io/enable: "true"
        hajimari.io/icon: "cow"
        hajimari.io/group: "storage"
        hajimari.io/appName: *host
        # kubernetes.io/ingress.class: nginx
        # type of authentication
        # nginx.ingress.kubernetes.io/auth-type: basic
        # prevent the controller from redirecting (308) to HTTPS
        # nginx.ingress.kubernetes.io/ssl-redirect: 'false'
        # name of the secret that contains the user/password definitions
        # nginx.ingress.kubernetes.io/auth-secret: basic-auth
        # message to display with an appropriate context why the authentication is required
        # nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
        # custom max body size for file uploading like backing image uploading
        # nginx.ingress.kubernetes.io/proxy-body-size: 10000m
