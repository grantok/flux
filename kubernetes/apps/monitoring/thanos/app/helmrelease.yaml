---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: thanos
      version: 12.0.3
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 30m
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: true

    query:
      enabled: true
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: "thanos.${SECRET_DOMAIN}"
        ingressClassName: "nginx"
        tls: true
      replicaLabels:
        - "__replica__" # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 99M

    queryFrontend:
      enabled: false

    bucketweb:
      enabled: true
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 64M

    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency"
        - "4"
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        limits:
          memory: 270M
      persistence:
        enabled: true
        storageClass: longhorn
        size: 15Gi

    storegateway:
      enabled: true
      resources:
        requests:
          cpu: 23m
          memory: 204M
        limits:
          memory: 226M
      persistence:
        enabled: true
        storageClass: longhorn
        size: 512Mi

    ruler:
      enabled: true
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.monitoring:9093
      clusterName: flux-cluster # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: longhorn
        size: 512Mi
      resources:
        requests:
          cpu: 23m
          memory: 94M
        limits:
          memory: 113M

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  # valuesFrom:
  #   - kind: Secret
  #     name: thanos-secrets
  #     valuesKey: S3_BUCKET_NAME
  #     targetPath: objstoreConfig.config.bucket
  #   - kind: Secret
  #     name: thanos-secrets
  #     valuesKey: S3_BUCKET_HOST
  #     targetPath: objstoreConfig.config.endpoint
  #   - kind: Secret
  #     name: thanos-secrets
  #     valuesKey: S3_BUCKET_REGION
  #     targetPath: objstoreConfig.config.region
  #   - kind: Secret
  #     name: thanos-secrets
  #     valuesKey: S3_ACCESS_KEY
  #     targetPath: objstoreConfig.config.access_key
  #   - kind: Secret
  #     name: thanos-secrets
  #     valuesKey: S3_SECRET_KEY
  #     targetPath: objstoreConfig.config.secret_key
